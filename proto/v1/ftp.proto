syntax = 'proto3';

package beget.ftp.v1.structures;

import "ftp/proto/v1/structures.proto";
import "google/api/annotations.proto";

service FtpService {
    rpc findAll (FindAllRequest) returns (FindAllResponse) {
        option: (google.api.http) = {
            get: "/v1/ftp/list/all"
        };
    }

    rpc createAccount (CreateAccountRequest) returns (AddAccountResponse) {
        option: (google.api.http) = {
            post: "/v1/ftp/create",
            body: "*"
        };
    }

    rpc deleteAccount (RemoveAccountRequest) returns (RemoveAccountResponse) {
        option: (google.api.http) = {
            delete: "/v1/ftp/delete/{id}"
        };
    }

    rpc changePassword (ChangePasswordRequest) returns (ChangePasswordResponse) {
        option: (google.api.http) = {
            patch: "/v1/ftp/changePassword",
            body: "*"
        };
    }

    rpc enableSsh (SetSshAccessEnabled) returns (SetSshAccessEnabledResponse) {
        option: (google.api.http) = {
            post: "/v1/ftp/enableSsh/{id}"
        };
    }

    rpc disableSsh (SetSshAccessDisabled) returns (SetSshAccessDisabledResponse) {
        option: (google.api.http) = {
            post: "/v1/ftp/disableSsh/{id}"
        };
    }
}

message FindAllRequest {}

message FindAllResponse {
    repeated structures.FtpAccount = 1;
}

message CreateAccountRequest {
    string suffix = 1;
    string password = 2;
    string path = 3;
}

message AddAccountResponse {
    structures.FtpAccount = 1;
}

message RemoveAccountRequest {
    uint32 id = 1;
}

message RemoveAccountResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
    }
}

message ChangePasswordRequest {
    uint32 account_id = 1;
    string password = 2;
}

message ChangePasswordResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
    }
}

message SetSshAccessEnabled {
    uint32 suffix = 1;
}

message SetSshAccessDisabled {
    uint32 suffix = 1;
}

message SetSshAccessEnabledResponse {
    oneof result {
        structures.FtpAccount = 1;
        Error error = 2;
    }
}

message SetSshAccessDisabledResponse {
    oneof result {
        structures.FtpAccount = 1;
        Error error = 2;
    }
}

message Error {
    enum Code {
        INTERNAL_ERROR = 0;
        NOT_FOUND = 1;
        //На фрихостинге SSH недоступен
        UNAVAILABLE = 2;
    }

    string message = 1;
}
